	AREA	ReversePolish, CODE, READONLY
	IMPORT	main
	EXPORT	start
start
	LDR R1, =rpnexp
	LDR R3, =0xA1000400 ; stack pointer
	EOR R0, R0, R0 ; clear bits in R0 to prepare for storing results
	EOR R6, R6, R6 ; pointer for storage
	LDR R5, =1; to record the bits in storage
	EOR R4, R4, R4;
	LDR R7, =10
	LDR R8, =1
	EOR R9, R9, R9
wh1 LDRB R2, [R1], #1
	CMP R2, #0
	BEQ endwh
	CMP R2, #0x20 ; ignore space
	BEQ wh1
	CMP R2, #0x2B ; "+"
	BEQ sub1
	CMP R2, #0x2A ; "*"
	BEQ sub2
	CMP R2, #0x2D ; "-"
	BEQ sub3
	CMP R2, #0x5E ; "^"
	BEQ sub4
	CMP R2, #0x21 ; "!"
	BEQ sub5
	CMP R2, #0x6E ; "n"
	BEQ sub6
	CMP R2, #0x2F ; "/"
	BEQ sub7
	B sub0 ; read str into stack

sub0 LDRB R2, [R1]
	B test
loop LDRB R2, [R1, #1]!
	ADD R5, R5, #1
test CMP R2, #0x20
	BNE loop
	MOV R6, R1
	B exam
loop1 LDRB R2, [R6, #-1]!
	SUB R2, R2, #0x30
	MUL R4, R8, R2
	MUL R8, R7, R8
	ADD R9, R9, R4
	SUB R5, R5, #1
exam CMP R5, #0
	BNE loop1
	STMFD R3!, {R9}
	EOR R6, R6, R6 ; pointer for storage
	LDR R5, =1; to record the bits in storage
	EOR R4, R4, R4;
	LDR R7, =10
	LDR R8, =1
	EOR R9, R9, R9
	B wh1
sub1 BL addition
	ADD R3, R3, #8
	STMFD R3!, {R0}
	B wh1
sub2 BL multiply
	ADD R3, R3, #8
	STMFD R3!, {R0}
	B wh1
sub3
	BL subsub
	ADD R3, R3, #8
	STMFD R3!, {R0}
	B wh1
sub4 
	BL power
	ADD R3, R3, #8
	STMFD R3!, {R0}
	B wh1
sub5 
	BL factorial
	ADD R3, R3, #4
	STMFD R3!, {R0}
	B wh1
sub6
	BL negation
	ADD R3, R3, #4
	STMFD R3!, {R0}
	B wh1
sub7 BL division
	ADD R3, R3, #8
	STMFD R3!, {R0}
	B wh1
endwh
stop	B	stop
addition 
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2,R4}
	LDR R2, [R12]
	LDR R4, [R12,#4]
	ADD R2,R2, R4
	MOV R0, R2
	LDMFD R3!, {R2,R4}
	LDMFD R3!, {R12, pc}

multiply 
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2,R4}
	LDR R2, [R12]
	LDR R4, [R12,#4]
	MUL R2,R4,R2
	MOV R0, R2
	LDMFD R3!, {R2,R4}
	LDMFD R3!, {R12, pc}
	
subsub 
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2,R4}
	LDR R2, [R12]
	LDR R4, [R12,#4]
	SUB R2,R4,R2
	MOV R0, R2
	LDMFD R3!, {R2,R4}
	LDMFD R3!, {R12, pc}

power
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2, R4, R5}
	LDR R2, [R12] ; times
	LDR R4, [R12, #4] ; original number
	MOV R5, R4
	B testwh
wh
	MUL R4, R5, R4
	SUB R2, R2, #1
testwh
	CMP R2, #1
	BNE wh
	MOV R0, R4
	LDMFD R3!, {R2, R4, R5}
	LDMFD R3!, {R12, pc}

factorial
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2, R4}
	LDR R2, [R12] 
	MOV R4, R2
	B testwh2
wh2
	MUL R2, R4, R2
testwh2
	SUBS R4, R4, #1
	BNE wh2
	MOV R0, R2
	LDMFD R3!, {R2, R4}
	LDMFD R3!, {R12, pc}

negation
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2, R4}
	LDR R2, [R12]
	LDR R4, =0xFFFFFFFF
	EOR R2, R2, R4
	ADD R2, R2, #1
	MOV R0, R2
	LDMFD R3!, {R2, R4}
	LDMFD R3!, {R12, pc}

division
	STMFD R3!, {R12, lr}
	ADD R12, R3, #8
	STMFD R3!, {R2,R4,R5}
	EOR R5, R5, R5
	LDR R2, [R12]
	LDR R4, [R12,#4]
	B testwh3
wh3
	ADD R5, R5, #1
testwh3
	SUBS R4, R4, R2
	BCS wh3
	MOV R0, R5
	LDMFD R3!, {R2,R4,R5}
	LDMFD R3!, {R12, pc}
	
	AREA	ReversePolish, DATA, READWRITE
rpnexp	DCB	"6 23 +",0
	END
